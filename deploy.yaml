apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      containers:
        - name: server-container
          image: hyjazloudin/fitness-goal-tracker-server:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http

---
apiVersion: v1
kind: Service
metadata:
  name: server-service
spec:
  selector:
    app: server
  ports:
  - protocol: TCP
    targetPort: 8080
    port: 80
    name: http
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
        - name: client-container
          image: hyjazloudin/fitness-goal-tracker:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
              name: http

---
apiVersion: v1
kind: Service
metadata:
  name: client-service
spec:
  selector:
    app: client
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hyjazloudin-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/query-routing: default/query-routing
spec:
  rules:
  - http:
      paths:
      - path: /server
        backend:
          serviceName: server-service
          servicePort: 80
      - path: /
        backend:
          serviceName: client-service
          servicePort: 80